{"version":3,"sources":["SignUp.tsx"],"names":[],"mappings":"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","file":"SignUp.js","sourcesContent":["import { ChangeEvent, FormEvent, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Text } from '../../components/Text'\nimport styles from './signup.module.scss'\n\nexport function SignUp() {\n  // const [valueName, setName] = useState('')\n  // const [valueNameError, setValueError] = useState('')\n  const [touched, setTouched] = useState(false)\n\n  const [valueEmail, setEmail] = useState('')\n  const [valueEmailError, setEmailError] = useState('')\n\n  const [valuePass, setPass] = useState('')\n  const [valuePassError, setPassError] = useState('')\n\n  const [valueConfirmPass, setConfirmPass] = useState('')\n  const [valueConfirmPassError, setConfirmPassError] = useState('')\n\n  const navigate = useNavigate()\n  const goMain = () => navigate('/antipoff-group')\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault()\n    setTouched(true)\n    // setValueError(validateValueName())\n    setEmailError(validateValueEmail())\n    setPassError(validateValuePass())\n    setConfirmPassError(validateValueConfirmPass())\n\n    const isFormValid = !validateValueEmail() && !validateValuePass() && !validateValueConfirmPass()\n    // const isFormValid = !validateValueName()\n\n    if (!isFormValid) {\n      return null\n    }\n\n    sessionStorage.setItem('token', 'true')\n    goMain()\n  }\n\n  // const handleChangeName = (event: ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  const handleChangeEmail = (event: ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)\n  const handleChangePass = (event: ChangeEvent<HTMLInputElement>) => setPass(event.target.value)\n  const handleChangeConfirmPass = (event: ChangeEvent<HTMLInputElement>) => setConfirmPass(event.target.value)\n\n  // const validateValueName = () => {\n  //   if (valueName.length <= 1) {\n  //     return 'Введите больше 2-x символов'\n  //   }\n\n  //   return ''\n  // }\n\n  const validateValueEmail = () => {\n    if (valueEmail.length <= 1) {\n      return 'Неверный Email'\n    }\n\n    return ''\n  }\n\n  const validateValuePass = () => {\n    if (valuePass === '') {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    if (valuePass !== valueConfirmPass) {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    return ''\n  }\n\n  const validateValueConfirmPass = () => {\n    if (valueConfirmPass === '') {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    if (valuePass !== valueConfirmPass) {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    return ''\n  }\n\n  return (\n    <section className={styles.wrapper}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <Text As=\"h1\" size={20} bold>\n          Регистрация\n        </Text>\n        <Text As=\"span\" size={16} bold>\n          Это тестовое задание, достаточно пройти валидацию формы для запуска приложения и заполнить поля со звездочкой\n        </Text>\n\n        <label className={styles.label} htmlFor=\"name\">\n          Имя\n        </label>\n        <input\n          className={styles.input}\n          // value={valueName}\n          // onChange={handleChangeName}\n          // aria-invalid={valueNameError ? 'true' : undefined}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Имя\"\n        />\n        {/* {touched && valueNameError && <div style={{ color: 'red', fontSize: '10px' }}>{valueNameError}</div>} */}\n\n        <label className={styles.label} htmlFor=\"email\">\n          Электронная почта*\n        </label>\n        <input\n          className={styles.input}\n          value={valueEmail}\n          onChange={handleChangeEmail}\n          aria-invalid={valueEmailError ? 'true' : undefined}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"example@mail.ru\"\n        />\n        {touched && valueEmailError && <div style={{ color: 'red', fontSize: '10px' }}>{valueEmailError}</div>}\n\n        <label className={styles.label} htmlFor=\"password\">\n          Пароль*\n        </label>\n        <input\n          className={styles.input}\n          value={valuePass}\n          onChange={handleChangePass}\n          aria-invalid={valuePassError ? 'true' : undefined}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"****\"\n        />\n\n        {touched && valuePassError && <div style={{ color: 'red', fontSize: '10px' }}>{valuePassError}</div>}\n\n        <label className={styles.label} htmlFor=\"confirm-password\">\n          Подтвердите пароль*\n        </label>\n        <input\n          className={styles.input}\n          value={valueConfirmPass}\n          onChange={handleChangeConfirmPass}\n          aria-invalid={valueConfirmPassError ? 'true' : undefined}\n          type=\"password\"\n          id=\"confirm-password\"\n          name=\"confirm-password\"\n          placeholder=\"****\"\n        />\n\n        {touched && valueConfirmPassError && (\n          <div style={{ color: 'red', fontSize: '10px' }}>{valueConfirmPassError}</div>\n        )}\n\n        <button className={styles.buttonForm} type=\"submit\">\n          Зарегистрироваться\n        </button>\n      </form>\n    </section>\n  )\n}\n"]}