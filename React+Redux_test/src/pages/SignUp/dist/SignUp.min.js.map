{"version":3,"sources":["SignUp.tsx"],"names":["react_1","require","react_router_dom_1","Text_1","signup_module_scss_1","SignUp","_a","useState","touched","setTouched","_b","valueEmail","setEmail","_c","valueEmailError","setEmailError","_d","valuePass","setPass","_e","valuePassError","setPassError","_f","valueConfirmPass","setConfirmPass","_g","valueConfirmPassError","setConfirmPassError","navigate","useNavigate","validateValueEmail","length","validateValuePass","validateValueConfirmPass","React","createElement","className","wrapper","form","onSubmit","event","preventDefault","sessionStorage","setItem","Text","As","size","bold","label","htmlFor","input","type","id","name","placeholder","value","onChange","target","aria-invalid","undefined","style","color","fontSize","buttonForm","exports"],"mappings":"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","file":"SignUp.min.js","sourcesContent":["import { ChangeEvent, FormEvent, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Text } from '../../components/Text'\nimport styles from './signup.module.scss'\n\nexport function SignUp() {\n  // const [valueName, setName] = useState('')\n  // const [valueNameError, setValueError] = useState('')\n  const [touched, setTouched] = useState(false)\n\n  const [valueEmail, setEmail] = useState('')\n  const [valueEmailError, setEmailError] = useState('')\n\n  const [valuePass, setPass] = useState('')\n  const [valuePassError, setPassError] = useState('')\n\n  const [valueConfirmPass, setConfirmPass] = useState('')\n  const [valueConfirmPassError, setConfirmPassError] = useState('')\n\n  const navigate = useNavigate()\n  const goMain = () => navigate('/antipoff-group')\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault()\n    setTouched(true)\n    // setValueError(validateValueName())\n    setEmailError(validateValueEmail())\n    setPassError(validateValuePass())\n    setConfirmPassError(validateValueConfirmPass())\n\n    const isFormValid = !validateValueEmail() && !validateValuePass() && !validateValueConfirmPass()\n    // const isFormValid = !validateValueName()\n\n    if (!isFormValid) {\n      return null\n    }\n\n    sessionStorage.setItem('token', 'true')\n    goMain()\n  }\n\n  // const handleChangeName = (event: ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  const handleChangeEmail = (event: ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)\n  const handleChangePass = (event: ChangeEvent<HTMLInputElement>) => setPass(event.target.value)\n  const handleChangeConfirmPass = (event: ChangeEvent<HTMLInputElement>) => setConfirmPass(event.target.value)\n\n  // const validateValueName = () => {\n  //   if (valueName.length <= 1) {\n  //     return 'Введите больше 2-x символов'\n  //   }\n\n  //   return ''\n  // }\n\n  const validateValueEmail = () => {\n    if (valueEmail.length <= 1) {\n      return 'Неверный Email'\n    }\n\n    return ''\n  }\n\n  const validateValuePass = () => {\n    if (valuePass === '') {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    if (valuePass !== valueConfirmPass) {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    return ''\n  }\n\n  const validateValueConfirmPass = () => {\n    if (valueConfirmPass === '') {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    if (valuePass !== valueConfirmPass) {\n      return 'Пароли должны быть одинаковы'\n    }\n\n    return ''\n  }\n\n  return (\n    <section className={styles.wrapper}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <Text As=\"h1\" size={20} bold>\n          Регистрация\n        </Text>\n        <Text As=\"span\" size={16} bold>\n          Это тестовое задание, достаточно пройти валидацию формы для запуска приложения и заполнить поля со звездочкой\n        </Text>\n\n        <label className={styles.label} htmlFor=\"name\">\n          Имя\n        </label>\n        <input\n          className={styles.input}\n          // value={valueName}\n          // onChange={handleChangeName}\n          // aria-invalid={valueNameError ? 'true' : undefined}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Имя\"\n        />\n        {/* {touched && valueNameError && <div style={{ color: 'red', fontSize: '10px' }}>{valueNameError}</div>} */}\n\n        <label className={styles.label} htmlFor=\"email\">\n          Электронная почта*\n        </label>\n        <input\n          className={styles.input}\n          value={valueEmail}\n          onChange={handleChangeEmail}\n          aria-invalid={valueEmailError ? 'true' : undefined}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"example@mail.ru\"\n        />\n        {touched && valueEmailError && <div style={{ color: 'red', fontSize: '10px' }}>{valueEmailError}</div>}\n\n        <label className={styles.label} htmlFor=\"password\">\n          Пароль*\n        </label>\n        <input\n          className={styles.input}\n          value={valuePass}\n          onChange={handleChangePass}\n          aria-invalid={valuePassError ? 'true' : undefined}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"****\"\n        />\n\n        {touched && valuePassError && <div style={{ color: 'red', fontSize: '10px' }}>{valuePassError}</div>}\n\n        <label className={styles.label} htmlFor=\"confirm-password\">\n          Подтвердите пароль*\n        </label>\n        <input\n          className={styles.input}\n          value={valueConfirmPass}\n          onChange={handleChangeConfirmPass}\n          aria-invalid={valueConfirmPassError ? 'true' : undefined}\n          type=\"password\"\n          id=\"confirm-password\"\n          name=\"confirm-password\"\n          placeholder=\"****\"\n        />\n\n        {touched && valueConfirmPassError && (\n          <div style={{ color: 'red', fontSize: '10px' }}>{valueConfirmPassError}</div>\n        )}\n\n        <button className={styles.buttonForm} type=\"submit\">\n          Зарегистрироваться\n        </button>\n      </form>\n    </section>\n  )\n}\n"]}