{"version":3,"sources":["usersReducer.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEA,8CAAyC;AA6B5B,QAAA,YAAY,GAAwC,UAAC,KAAK,EAAE,MAAM;IAC7E,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,sBAAQ,CAAC,aAAa;YACzB,6BACK,KAAK,KACR,OAAO,EAAE,IAAI,IACd;QAEH,KAAK,sBAAQ,CAAC,qBAAqB;YACjC,6BACK,KAAK,KACR,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,EAC3B,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,EAC3B,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EACzC,OAAO,EAAE,KAAK,IACf;QAEH,KAAK,sBAAQ,CAAC,mBAAmB;YAC/B,6BACK,KAAK,KACR,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,OAAO,EAAE,KAAK,IACf;QAEH,KAAK,sBAAQ,CAAC,gBAAgB;YAC5B,6BACK,KAAK,KACR,IAAI,EAAE,MAAM,CAAC,OAAO,IACrB;QAEH,KAAK,sBAAQ,CAAC,gBAAgB;YAC5B,6BACK,KAAK,KACR,QAAQ,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAC3B;QAEH;YACE,OAAO,KAAK,CAAA;KACf;AACH,CAAC,CAAA","file":"usersReducer.js","sourcesContent":["import { Reducer } from 'react'\nimport { IUser } from '../../types/IUser'\nimport { EActions } from '../rootReducer'\nimport {\n  IChangeLikeUserPageAction,\n  ISetCurrentPageAction,\n  IUsersRequestAction,\n  IUsersRequestErrorAction,\n  IUsersRequestSuccessAction,\n} from './usersActions'\n\nexport type TDataLike = {\n  id: number\n  like: boolean\n}\nexport interface IUsersState {\n  page: number\n  data: IUser[]\n  total_pages: number\n  error: string\n  loading: boolean\n  dataLike: TDataLike[]\n}\n\ntype TUsersActions =\n  | IUsersRequestAction\n  | IUsersRequestSuccessAction\n  | IUsersRequestErrorAction\n  | ISetCurrentPageAction\n  | IChangeLikeUserPageAction\n\nexport const usersReducer: Reducer<IUsersState, TUsersActions> = (state, action) => {\n  switch (action.type) {\n    case EActions.USERS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n\n    case EActions.USERS_REQUEST_SUCCESS:\n      return {\n        ...state,\n        page: action.usersData.page,\n        data: action.usersData.data,\n        total_pages: action.usersData.total_pages,\n        loading: false,\n      }\n\n    case EActions.USERS_REQUEST_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      }\n\n    case EActions.SET_CURRENT_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      }\n\n    case EActions.CHANGE_LIKE_USER:\n      return {\n        ...state,\n        dataLike: [action.payload],\n      }\n\n    default:\n      return state\n  }\n}\n\n"]}