{"version":3,"sources":["usersReducer.ts"],"names":["rootReducer_1","require","exports","usersReducer","state","action","type","EActions","USERS_REQUEST","__assign","loading","USERS_REQUEST_SUCCESS","page","usersData","data","total_pages","USERS_REQUEST_ERROR","error","SET_CURRENT_PAGE","payload","CHANGE_LIKE_USER","dataLike"],"mappings":"yRAEA,IAAAA,cAAAC,QAAA,kBA6BaC,QAAAC,aAAoD,SAACC,EAAOC,GACvE,OAAQA,EAAOC,MACb,KAAKN,cAAAO,SAASC,cACZ,OAAAC,SAAAA,SAAA,GACKL,GAAK,CACRM,SAAS,IAGb,KAAKV,cAAAO,SAASI,sBACZ,OAAAF,SAAAA,SAAA,GACKL,GAAK,CACRQ,KAAMP,EAAOQ,UAAUD,KACvBE,KAAMT,EAAOQ,UAAUC,KACvBC,YAAaV,EAAOQ,UAAUE,YAC9BL,SAAS,IAGb,KAAKV,cAAAO,SAASS,oBACZ,OAAAP,SAAAA,SAAA,GACKL,GAAK,CACRa,MAAOZ,EAAOY,MACdP,SAAS,IAGb,KAAKV,cAAAO,SAASW,iBACZ,OAAAT,SAAAA,SAAA,GACKL,GAAK,CACRQ,KAAMP,EAAOc,UAGjB,KAAKnB,cAAAO,SAASa,iBACZ,OAAAX,SAAAA,SAAA,GACKL,GAAK,CACRiB,SAAU,CAAChB,EAAOc,WAGtB,QACE,OAAOf","file":"usersReducer.min.js","sourcesContent":["import { Reducer } from 'react'\nimport { IUser } from '../../types/IUser'\nimport { EActions } from '../rootReducer'\nimport {\n  IChangeLikeUserPageAction,\n  ISetCurrentPageAction,\n  IUsersRequestAction,\n  IUsersRequestErrorAction,\n  IUsersRequestSuccessAction,\n} from './usersActions'\n\nexport type TDataLike = {\n  id: number\n  like: boolean\n}\nexport interface IUsersState {\n  page: number\n  data: IUser[]\n  total_pages: number\n  error: string\n  loading: boolean\n  dataLike: TDataLike[]\n}\n\ntype TUsersActions =\n  | IUsersRequestAction\n  | IUsersRequestSuccessAction\n  | IUsersRequestErrorAction\n  | ISetCurrentPageAction\n  | IChangeLikeUserPageAction\n\nexport const usersReducer: Reducer<IUsersState, TUsersActions> = (state, action) => {\n  switch (action.type) {\n    case EActions.USERS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n\n    case EActions.USERS_REQUEST_SUCCESS:\n      return {\n        ...state,\n        page: action.usersData.page,\n        data: action.usersData.data,\n        total_pages: action.usersData.total_pages,\n        loading: false,\n      }\n\n    case EActions.USERS_REQUEST_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      }\n\n    case EActions.SET_CURRENT_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      }\n\n    case EActions.CHANGE_LIKE_USER:\n      return {\n        ...state,\n        dataLike: [action.payload],\n      }\n\n    default:\n      return state\n  }\n}\n\n"]}